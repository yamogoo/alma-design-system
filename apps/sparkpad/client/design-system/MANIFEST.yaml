name: AlmaIconsProtoKit
description: >
  AlmaIconsProtoKit is a prototype UI Kit and design system infrastructure
  that unifies components, tokens, fonts, icons, and utilities into a single
  platform for product development.

project:
  structure:
    adapters: environment-specific wrappers for components
    assets: base resources (fonts, icons, animations, SCSS core)
    components: Vue components (atoms, molecules, organisms, templates)
    composables: Vue composables (global and local hooks)
    constants: UI constants
    declarations: TypeScript declarations
    directives: Vue directives
    scripts: build/dev helper scripts
    stories: Storybook stories (components and tokens)
    tokens: design tokens (JSON), theming (light/dark), build outputs
    typings: TypeScript types for UI, API, router, etc.
    utils: helper utilities (units, events, sanitization, etc.)
    MANIFEST.yaml: machine-readable specification
    MANIFEST.md: human-readable documentation

modules:
  adapters:
    description: >
      Adapters provide bridges between raw Vue components and specific
      environments/contexts. They contain minimal wrappers and mapping
      logic, while components/ keep the full UI and typing contracts.
    structure:
      atoms: wrappers for atomic components (button, input, icon, etc.)
      molecules: wrappers for combined elements (forms, dropdowns, snackbar)
      organisms: environment-specific complex blocks
      templates: high-level layout wrappers

  assets:
    animations: JSON animations (spinner, themeIcon)
    fonts: bundled fonts for offline-first usage (Manrope Cyrillic + Latin, weights 200–800)
    icons: AlmaIcons entry point (index.ts)
    images: static images
    scss:
      abstracts: tokens, base colors, breakpoints, themes
      core: functions & mixins (px2rem, themify, map-get)
      extends: extensions (animations, containers, components)
      mixins: reusable SCSS mixins
      entry: app.*.scss global style entry points

  components:
    description: >
      Atomic design structure with Vue 3 + TypeScript.
      Each component has implementation, typings, unit tests, and stories.
    requirements:
      - Implementation (.vue + .ts)
      - Typings (e.g., Button.ts with ButtonProps)
      - Unit tests (.spec.ts)
      - Stories (.stories.ts[x])
    structure:
      atoms: smallest units (buttons, icons, inputs, typography)
      molecules: composed elements (dropdown, forms, snackbar)
      organisms: complex blocks (editor, navigation, forms)
      templates: ready-to-use layouts (headers, footers, menus)

  composables:
    global: app-wide hooks (theme, meta, connection state)
    local: feature/local hooks (hover, clickOutside, drag-and-drop, SEO, navigation, etc.)

  tokens:
    src:
      abstracts: backgrounds, borders, shadows, base colors
      atoms: per-component tokens
      molecules: per-component tokens
      templates: per-component tokens
      themes: light and dark variants
      typography: text styles and type scale
      tokens: spacing, stroke, roundness, gaps, touch areas
    build: compiled runtime tokens (CSS vars, JSON) — generated only
    docs: structure.md

  stories:
    components: story examples for atomic/molecular UI
    decorators: Storybook global wrappers
    tokens: theme and token showcase
    utils: helpers for story organization

  utils:
    - Unit conversion (px2rem)
    - Path parsing (getPathSegment)
    - Event helpers
    - Unit testing helpers (Vitest setup)

  typings:
    - API
    - routing
    - themes
    - localization
    - UI controls
    - elements
    - declaration helpers (.d.ts)

rules:
  - "**/*.temp/ — draft components/composables (ignored via .gitignore)"
  - "tokens/build/ — generated only, excluded from git"
  - "Fonts included for offline-first; can be later replaced with CDN-hosted package"
  - "Each component must include at least: .vue + .ts + .spec.ts; stories optional but recommended"
  - "Adapters must remain thin wrappers; heavy UI logic belongs in components"

summary: >
  AlmaIconsProtoKit is not just a component library, but an experimental
  design system platform that brings together assets (fonts, icons, animations),
  tokens (colors, typography, spacing, themes), components & adapters (atomic design
  + environment bindings), composables & utils (hooks and helpers), and documentation
  (Storybook, MANIFEST, Figma integration).
