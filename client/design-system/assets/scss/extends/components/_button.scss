@use "../../abstracts/index" as *;
@use "../../core/index" as *;
@use "../../extends/components/typography" as *;
@use "../../extends/animations" as *;

@mixin defineButtonSizes($map: get($atoms, "button")) {
  @each $variant, $sizes in $map {
    @each $size, $val in $sizes {
      $button-size: px2rem(get($val, "self.size"));
      $gap: px2rem(get($val, "self.gap"));
      $border-radius: get($val, "self.border-radius");
      $padding: get($val, "self.padding");

      $font-style: get($val, "label.font-style");
      $icon-size: px2rem(get($val, "icon.size"));

      &_variant-#{$variant} {
        &_size-#{$size} {
          // %button_variant-#{$variant}_size-#{$size}
          gap: $gap;
          height: $button-size;
          min-height: $button-size;
          border-radius: $border-radius;

          &.button_variant-default {
            padding: $padding;
          }

          &.button_variant-rounded,
          &.button_variant-squared {
            width: $button-size !important;
          }

          .button__label {
            @extend %t__#{$font-style};
            line-height: 1;
          }
        }
      }
    }
  }
}

@mixin defineThemes($map: get($themes, "light.atoms.button")) {
  @each $mode, $modes in $map {
    @each $tone, $val in $modes {
      &_mode-#{$mode} {
        &_tone-#{$tone} {
          // %button_mode-#{$tone}_tone-#{$mode}
          @include themify($themes) {
            color: themed("atoms.button.#{$mode}.#{$tone}.label.normal");
            fill: themed("atoms.button.#{$mode}.#{$tone}.label.normal");
            background-color: themed(
              "atoms.button.#{$mode}.#{$tone}.self.background.normal"
            );
            border: $outline solid
              themed("atoms.button.#{$mode}.#{$tone}.self.border.normal");
          }
          @extend %base-transition;

          &:focus {
            @include themify($themes) {
              outline: $outline solid
                themed("atoms.button.#{$mode}.#{$tone}.self.border.outline");
            }
          }

          &.button_hovered {
            @include themify($themes) {
              background-color: themed(
                "atoms.button.#{$mode}.#{$tone}.self.background.hovered"
              );
              border: $outline solid
                themed("atoms.button.#{$mode}.#{$tone}.self.border.hovered");
            }

            .button__label {
              @include themify($themes) {
                color: themed("atoms.button.#{$mode}.#{$tone}.label.hovered");
                fill: themed("atoms.button.#{$mode}.#{$tone}.label.hovered");
              }
            }
          }

          &.button_pressed {
            @include themify($themes) {
              background-color: themed(
                "atoms.button.#{$mode}.#{$tone}.self.background.pressed"
              );
              border: $outline solid
                themed("atoms.button.#{$mode}.#{$tone}.self.border.pressed");
            }

            .button__label {
              @include themify($themes) {
                color: themed("atoms.button.#{$mode}.#{$tone}.label.pressed");
                fill: themed("atoms.button.#{$mode}.#{$tone}.label.pressed");
              }
            }
          }

          &.button_disabled {
            @include themify($themes) {
              background-color: themed(
                "atoms.button.#{$mode}.#{$tone}.self.background.disabled"
              );
              border: $outline solid
                themed("atoms.button.#{$mode}.#{$tone}.self.border.disabled");
            }

            .button__label {
              @include themify($themes) {
                color: themed("atoms.button.#{$mode}.#{$tone}.label.disabled");
                fill: themed("atoms.button.#{$mode}.#{$tone}.label.disabled");
              }
            }
          }
        }
      }
    }
  }
}

// %button_variant-#{$variant}_size-#{$size}
// For expample: %button_variant-rounded_size-md
%button {
  @include defineButtonSizes();
}

// Usage %button_tone-#{$tone}_mode-#{$mode}
// For example: %button_tone-acccent_mode-primary
%button {
  @include defineThemes();
}
