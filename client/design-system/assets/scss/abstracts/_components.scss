// Generated by tokensParser. ‼️ DO NOT MODIFY THIS FILE ‼️ /


$action-sheet:(
  default: (
  lg: (
  type: "component",
  self: (
  min-height: (
  value: 32px,
  type: "size",
  unit: "px",
  meta: (
  description: "Minimum height of large action sheet",
  category: "actionSheet"
)
),
  border-radius: (
  value: 16px,
  type: "radius",
  unit: "px",
  meta: (
  description: "Border radius for large action sheet",
  category: "actionSheet"
)
),
  padding: (
  value: 48px 24px 24px 24px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Padding inside large action sheet",
  category: "actionSheet"
)
)
)
),
  md: (
  type: "component",
  self: (
  min-height: (
  value: 32px,
  type: "size",
  unit: "px",
  meta: (
  description: "Minimum height of medium action sheet",
  category: "actionSheet"
)
),
  border-radius: (
  value: 12px,
  type: "radius",
  unit: "px",
  meta: (
  description: "Border radius for medium action sheet",
  category: "actionSheet"
)
),
  padding: (
  value: 24px 24px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Padding inside medium action sheet",
  category: "actionSheet"
)
)
)
)
)
);
$button:(
  default: (
  lg: (
  type: "component",
  self: (
  size: (
  value: 56px,
  type: "size",
  unit: "px",
  meta: (
  description: "Button height for large default button",
  category: "button"
)
),
  gap: (
  value: 12px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Gap between button elements",
  category: "button"
)
),
  padding: (
  value: 0px 32px 0px 32px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Padding inside large default button",
  category: "button"
)
),
  border-radius: (
  value: 9999px,
  type: "radius",
  unit: "px",
  meta: (
  description: "Border radius for large default button",
  category: "button"
)
)
),
  elements: (
  label: (
  font-style: (
  value: label-1,
  type: "alias",
  unit: "",
  meta: (
  description: "Font style for button label",
  category: "typography"
)
)
),
  icon: (
  size: (
  value: 20px,
  type: "size",
  unit: "px",
  meta: (
  description: "Icon size in large default button",
  category: "button"
)
),
  alias: (
  size: (
  value: sm,
  meta: (
  description: "Alias for icon size",
  category: "button"
)
)
)
)
)
),
  md: (
  type: "component",
  self: (
  size: (
  value: 44px,
  type: "size",
  unit: "px",
  meta: (
  description: "Medium default button height",
  category: "button"
)
),
  gap: (
  value: 12px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Gap between elements",
  category: "button"
)
),
  padding: (
  value: 0px 24px 0px 24px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Padding inside medium button",
  category: "button"
)
),
  border-radius: (
  value: 9999px,
  type: "radius",
  unit: "px",
  meta: (
  description: "Border radius for medium button",
  category: "button"
)
)
),
  elements: (
  label: (
  font-style: (
  value: label-2,
  type: "alias",
  unit: "",
  meta: (
  description: "Font style for button label",
  category: "typography"
)
)
),
  icon: (
  size: (
  value: 16px,
  type: "size",
  unit: "px",
  meta: (
  description: "Icon size in medium button",
  category: "button"
)
),
  alias: (
  size: (
  value: xs,
  meta: (
  description: "Alias for icon size",
  category: "button"
)
)
)
)
)
),
  sm: (
  type: "component",
  self: (
  size: (
  value: 40px,
  type: "size",
  unit: "px",
  meta: (
  description: "Small default button height",
  category: "button"
)
),
  gap: (
  value: 12px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Gap between elements",
  category: "button"
)
),
  padding: (
  value: 0px 12px 0px 12px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Padding inside small button",
  category: "button"
)
),
  border-radius: (
  value: 9999px,
  type: "radius",
  unit: "px",
  meta: (
  description: "Border radius for small button",
  category: "button"
)
)
),
  elements: (
  label: (
  font-style: (
  value: label-3,
  type: "alias",
  unit: "",
  meta: (
  description: "Font style for button label",
  category: "typography"
)
)
),
  icon: (
  size: (
  value: 16px,
  type: "size",
  unit: "px",
  meta: (
  description: "Icon size in small button",
  category: "button"
)
),
  alias: (
  size: (
  value: xs,
  meta: (
  description: "Alias for icon size",
  category: "button"
)
)
)
)
)
),
  xs: (
  type: "component",
  self: (
  size: (
  value: 36px,
  type: "size",
  unit: "px",
  meta: (
  description: "Extra small default button height",
  category: "button"
)
),
  gap: (
  value: 12px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Gap between elements",
  category: "button"
)
),
  padding: (
  value: 0px 12px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Padding inside extra small button",
  category: "button"
)
),
  border-radius: (
  value: 9999px,
  type: "radius",
  unit: "px",
  meta: (
  description: "Border radius for extra small button",
  category: "button"
)
)
),
  elements: (
  label: (
  font-style: (
  value: label-3,
  type: "alias",
  unit: "",
  meta: (
  description: "Font style for button label",
  category: "typography"
)
)
),
  icon: (
  size: (
  value: 12px,
  type: "size",
  unit: "px",
  meta: (
  description: "Icon size in extra small button",
  category: "button"
)
),
  alias: (
  size: (
  value: xxs,
  meta: (
  description: "Alias for icon size",
  category: "button"
)
)
)
)
)
)
),
  rounded: (
  lg: (
  type: "component",
  self: (
  size: (
  value: 56px,
  type: "size",
  unit: "px",
  meta: (
  description: "Large rounded button height",
  category: "button"
)
),
  gap: (
  value: 12px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Gap between elements",
  category: "button"
)
),
  padding: (
  value: 0px 0px 0px 0px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Padding inside large rounded button",
  category: "button"
)
),
  border-radius: (
  value: 9999px,
  type: "radius",
  unit: "px",
  meta: (
  description: "Border radius for large rounded button",
  category: "button"
)
)
),
  elements: (
  label: (
  font-style: (
  value: label-1,
  type: "alias",
  unit: "",
  meta: (
  description: "Font style for button label",
  category: "typography"
)
)
),
  icon: (
  size: (
  value: 20px,
  type: "size",
  unit: "px",
  meta: (
  description: "Icon size in large rounded button",
  category: "button"
)
),
  alias: (
  size: (
  value: sm,
  meta: (
  description: "Alias for icon size",
  category: "button"
)
)
)
)
)
),
  md: (
  type: "component",
  self: (
  size: (
  value: 44px,
  type: "size",
  unit: "px",
  meta: (
  description: "Medium rounded button height",
  category: "button"
)
),
  gap: (
  value: 12px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Gap between elements",
  category: "button"
)
),
  padding: (
  value: 0px 0px 0px 0px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Padding inside medium rounded button",
  category: "button"
)
),
  border-radius: (
  value: 9999px,
  type: "radius",
  unit: "px",
  meta: (
  description: "Border radius for medium rounded button",
  category: "button"
)
)
),
  elements: (
  label: (
  font-style: (
  value: label-3,
  type: "alias",
  unit: "",
  meta: (
  description: "Font style for button label",
  category: "typography"
)
)
),
  icon: (
  size: (
  value: 16px,
  type: "size",
  unit: "px",
  meta: (
  description: "Icon size in medium rounded button",
  category: "button"
)
),
  alias: (
  size: (
  value: xs,
  meta: (
  description: "Alias for icon size",
  category: "button"
)
)
)
)
)
),
  sm: (
  type: "component",
  self: (
  size: (
  value: 32px,
  type: "size",
  unit: "px",
  meta: (
  description: "Small rounded button height",
  category: "button"
)
),
  gap: (
  value: 12px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Gap between elements",
  category: "button"
)
),
  padding: (
  value: 0px 24px 0px 24px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Padding inside small rounded button",
  category: "button"
)
),
  border-radius: (
  value: 9999px,
  type: "radius",
  unit: "px",
  meta: (
  description: "Border radius for small rounded button",
  category: "button"
)
)
),
  elements: (
  label: (
  font-style: (
  value: label-4,
  type: "alias",
  unit: "",
  meta: (
  description: "Font style for button label",
  category: "typography"
)
)
),
  icon: (
  size: (
  value: 16px,
  type: "size",
  unit: "px",
  meta: (
  description: "Icon size in small rounded button",
  category: "button"
)
),
  alias: (
  size: (
  value: xs,
  meta: (
  description: "Alias for icon size",
  category: "button"
)
)
)
)
)
),
  xs: (
  type: "component",
  self: (
  size: (
  value: 24px,
  type: "size",
  unit: "px",
  meta: (
  description: "Extra small rounded button height",
  category: "button"
)
),
  gap: (
  value: 12px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Gap between elements",
  category: "button"
)
),
  padding: (
  value: 0px 24px 0px 24px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Padding inside extra small rounded button",
  category: "button"
)
),
  border-radius: (
  value: 9999px,
  type: "radius",
  unit: "px",
  meta: (
  description: "Border radius for extra small rounded button",
  category: "button"
)
)
),
  elements: (
  label: (
  font-style: (
  value: label-4,
  type: "alias",
  unit: "",
  meta: (
  description: "Font style for button label",
  category: "typography"
)
)
),
  icon: (
  size: (
  value: 12px,
  type: "size",
  unit: "px",
  meta: (
  description: "Icon size in extra small rounded button",
  category: "button"
)
),
  alias: (
  size: (
  value: xxs,
  meta: (
  description: "Alias for icon size",
  category: "button"
)
)
)
)
)
)
)
);
$carousel-stack:(
  default: (
  lg: (
  type: "component",
  elements: (
  header: (
  padding: (
  value: 24px 24px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Padding for the header inside large carousel stack",
  category: "carouselStack"
)
)
)
)
),
  md: (
  type: "component",
  elements: (
  header: (
  padding: (
  value: 16px 16px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Padding for the header inside medium carousel stack",
  category: "carouselStack"
)
)
)
)
)
)
);
$char-tooltip-label:(
  default: (
  lg: (
  self: (
  gap: (
  value: 12px,
  type: "spacing",
  unit: "px"
),
  padding: (
  value: 8px 12px,
  type: "spacing",
  unit: "px"
),
  border-radius: (
  value: 8px,
  type: "radius",
  unit: "px"
)
),
  elements: (
  label: (
  font-style: (
  value: caption-1,
  type: "alias"
)
)
)
)
)
);
$divider:(
  default: (
  lg: (
  type: "component",
  self: (
  border-width: (
  value: 1px,
  type: "border",
  unit: "px",
  meta: (
  description: "Divider border width for large size",
  category: "divider"
)
),
  padding: (
  value: 16px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Padding around the divider for large size",
  category: "divider"
)
)
)
),
  md: (
  type: "component",
  self: (
  border-width: (
  value: 1px,
  type: "border",
  unit: "px",
  meta: (
  description: "Divider border width for medium size",
  category: "divider"
)
),
  padding: (
  value: 12px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Padding around the divider for medium size",
  category: "divider"
)
)
)
),
  sm: (
  type: "component",
  self: (
  border-width: (
  value: 1px,
  type: "border",
  unit: "px",
  meta: (
  description: "Divider border width for small size",
  category: "divider"
)
),
  padding: (
  value: 8px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Padding around the divider for small size",
  category: "divider"
)
)
)
),
  xs: (
  type: "component",
  self: (
  border-width: (
  value: 1px,
  type: "border",
  unit: "px",
  meta: (
  description: "Divider border width for extra small size",
  category: "divider"
)
),
  padding: (
  value: 0px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "No padding for extra small divider",
  category: "divider"
)
)
)
)
)
);
$drop-down:(
  default: (
  lg: (
  type: "component",
  self: (
  min-width: (
  value: 76px,
  type: "size",
  unit: "px",
  meta: (
  description: "Minimum width of large dropdown",
  category: "dropDown"
)
),
  height: (
  value: 56px,
  type: "size",
  unit: "px",
  meta: (
  description: "Height of large dropdown",
  category: "dropDown"
)
)
),
  elements: (
  value: (
  type: "component",
  elements: (
  label: (
  font-style: (
  value: label-2,
  type: "alias",
  meta: (
  description: "Font style for dropdown value label",
  category: "typography"
)
)
),
  icon: (
  size: (
  value: 12px,
  type: "size",
  unit: "px",
  meta: (
  description: "Icon size for dropdown value",
  category: "dropDown"
)
)
)
),
  self: (
  gap: (
  value: 8px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Gap inside dropdown value component",
  category: "dropDown"
)
),
  padding: (
  value: 8px 12px 8px 12px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Padding inside dropdown value component",
  category: "dropDown"
)
),
  border-radius: (
  value: 8px,
  type: "radius",
  unit: "px",
  meta: (
  description: "Border radius of dropdown value component",
  category: "dropDown"
)
)
)
),
  options: (
  padding: (
  value: 8px 12px 8px 12px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Padding inside dropdown options",
  category: "dropDown"
)
),
  border-radius: (
  value: 8px,
  type: "radius",
  unit: "px",
  meta: (
  description: "Border radius for dropdown options",
  category: "dropDown"
)
)
)
),
  tokens: (
  padding: (
  value: 8px 12px 8px 12px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Padding tokens for large dropdown",
  category: "dropDown"
)
),
  border-radius: (
  value: 8px,
  type: "radius",
  unit: "px",
  meta: (
  description: "Border radius token for large dropdown",
  category: "dropDown"
)
)
)
),
  md: (
  type: "component",
  self: (
  min-width: (
  value: 76px,
  type: "size",
  unit: "px",
  meta: (
  description: "Minimum width of medium dropdown",
  category: "dropDown"
)
),
  height: (
  value: 44px,
  type: "size",
  unit: "px",
  meta: (
  description: "Height of medium dropdown",
  category: "dropDown"
)
)
),
  elements: (
  value: (
  type: "component",
  elements: (
  label: (
  font-style: (
  value: label-3,
  type: "alias",
  meta: (
  description: "Font style for dropdown value label",
  category: "typography"
)
)
),
  icon: (
  size: (
  value: 12px,
  type: "size",
  unit: "px",
  meta: (
  description: "Icon size for dropdown value",
  category: "dropDown"
)
)
)
),
  self: (
  gap: (
  value: 8px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Gap inside dropdown value component",
  category: "dropDown"
)
),
  padding: (
  value: 8px 12px 8px 12px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Padding inside dropdown value component",
  category: "dropDown"
)
),
  border-radius: (
  value: 8px,
  type: "radius",
  unit: "px",
  meta: (
  description: "Border radius of dropdown value component",
  category: "dropDown"
)
)
)
),
  options: (
  padding: (
  value: 8px 12px 8px 12px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Padding inside dropdown options",
  category: "dropDown"
)
),
  border-radius: (
  value: 8px,
  type: "radius",
  unit: "px",
  meta: (
  description: "Border radius for dropdown options",
  category: "dropDown"
)
)
)
),
  tokens: (
  padding: (
  value: 8px 12px 8px 12px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Padding tokens for medium dropdown",
  category: "dropDown"
)
),
  border-radius: (
  value: 8px,
  type: "radius",
  unit: "px",
  meta: (
  description: "Border radius token for medium dropdown",
  category: "dropDown"
)
)
)
)
)
);
$form:(
  default: (
  md: (
  type: "component",
  self: (
  padding: (
  value: 16px 24px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Padding inside the form",
  category: "form"
)
),
  border-radius: (
  value: 16px,
  type: "radius",
  unit: "px",
  meta: (
  description: "Border radius of the form",
  category: "form"
)
)
)
)
)
);
$form-wrapper:(
  default: (
  md: (
  type: "component",
  self: (
  padding: (
  value: 16px 24px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Padding inside the form wrapper",
  category: "formWrapper"
)
),
  border-radius: (
  value: 16px,
  type: "radius",
  unit: "px",
  meta: (
  description: "Border radius of the form wrapper",
  category: "formWrapper"
)
),
  border-width: (
  value: 1px,
  type: "size",
  unit: "px",
  meta: (
  description: "Border width of the form wrapper",
  category: "formWrapper"
)
)
),
  elements: (
  header: (
  padding: (
  value: 12px 0px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Padding for the header inside the form wrapper",
  category: "formWrapper"
)
)
)
)
)
)
);
$group:(
  default: (
  lg: (
  type: "component",
  self: (
  gap: (
  value: 24px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Gap between elements in large group",
  category: "group"
)
),
  border-width: (
  value: 1px,
  type: "size",
  unit: "px",
  meta: (
  description: "Border width for large group",
  category: "group"
)
)
)
),
  md: (
  type: "component",
  self: (
  gap: (
  value: 16px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Gap between elements in medium group",
  category: "group"
)
),
  border-width: (
  value: 1px,
  type: "size",
  unit: "px",
  meta: (
  description: "Border width for medium group",
  category: "group"
)
)
)
),
  sm: (
  type: "component",
  self: (
  gap: (
  value: 12px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Gap between elements in small group",
  category: "group"
)
),
  border-width: (
  value: 1px,
  type: "size",
  unit: "px",
  meta: (
  description: "Border width for small group",
  category: "group"
)
)
)
)
)
);
$icon:(
  default: (
  xxs: (
  type: "component",
  self: (
  size: (
  value: 12px,
  type: "size",
  unit: "px",
  meta: (
  description: "Extra extra small icon size",
  category: "icon",
  tags: (
    "ui", "icon"
  )
)
)
)
),
  xs: (
  type: "component",
  self: (
  size: (
  value: 16px,
  type: "size",
  unit: "px",
  meta: (
  description: "Extra small icon size",
  category: "icon",
  tags: (
    "ui", "icon"
  )
)
)
)
),
  sm: (
  type: "component",
  self: (
  size: (
  value: 20px,
  type: "size",
  unit: "px",
  meta: (
  description: "Small icon size",
  category: "icon",
  tags: (
    "ui", "icon"
  )
)
)
)
),
  md: (
  type: "component",
  self: (
  size: (
  value: 24px,
  type: "size",
  unit: "px",
  meta: (
  description: "Medium icon size",
  category: "icon",
  tags: (
    "ui", "icon"
  )
)
)
)
),
  lg: (
  type: "component",
  self: (
  size: (
  value: 32px,
  type: "size",
  unit: "px",
  meta: (
  description: "Large icon size",
  category: "icon",
  tags: (
    "ui", "icon"
  )
)
)
)
),
  xl: (
  type: "component",
  self: (
  size: (
  value: 48px,
  type: "size",
  unit: "px",
  meta: (
  description: "Extra large icon size",
  category: "icon",
  tags: (
    "ui", "icon"
  )
)
)
)
),
  xxl: (
  type: "component",
  self: (
  size: (
  value: 56px,
  type: "size",
  unit: "px",
  meta: (
  description: "Extra extra large icon size",
  category: "icon",
  tags: (
    "ui", "icon"
  )
)
)
)
)
)
);
$input:(
  default: (
  md: (
  type: "component",
  self: (
  height: (
  value: 44px,
  type: "size",
  unit: "px",
  meta: (
  description: "Height of the input field for medium size",
  category: "input"
)
),
  whole-height: (
  value: 60px,
  type: "size",
  unit: "px",
  meta: (
  description: "Total height including padding for medium input",
  category: "input"
)
),
  padding: (
  value: 8px 16px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Horizontal padding for medium input",
  category: "input"
)
),
  border-radius: (
  value: 16px,
  type: "radius",
  unit: "px",
  meta: (
  description: "Border radius for medium input",
  category: "input"
)
)
),
  elements: (
  value: (
  font-style: (
  value: label-3,
  type: "alias",
  meta: (
  description: "Font style for input value text",
  category: "typography"
)
),
  padding-top: (
  value: 12px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Top padding for input value text",
  category: "input"
)
)
),
  placeholder: (
  font-style: (
  value: label-3,
  type: "alias",
  meta: (
  description: "Font style for placeholder text",
  category: "typography"
)
)
),
  error: (
  font-style: (
  value: caption-1,
  type: "alias",
  meta: (
  description: "Font style for error text",
  category: "typography"
)
),
  padding: (
  value: 0px 16px 0px 16px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Padding for error message",
  category: "input"
)
)
)
)
),
  lg: (
  type: "component",
  self: (
  height: (
  value: 52px,
  type: "size",
  unit: "px",
  meta: (
  description: "Height of the input field for large size",
  category: "input"
)
),
  whole-height: (
  value: 68px,
  type: "size",
  unit: "px",
  meta: (
  description: "Total height including padding for large input",
  category: "input"
)
),
  padding: (
  value: 8px 16px 8px 16px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Padding for large input",
  category: "input"
)
),
  border-radius: (
  value: 8px,
  type: "radius",
  unit: "px",
  meta: (
  description: "Border radius for large input",
  category: "input"
)
)
),
  elements: (
  value: (
  font-style: (
  value: label-3,
  type: "alias",
  meta: (
  description: "Font style for input value text",
  category: "typography"
)
),
  padding-top: (
  value: 12px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Top padding for input value text",
  category: "input"
)
)
),
  placeholder: (
  font-style: (
  value: label-3,
  type: "alias",
  meta: (
  description: "Font style for placeholder text",
  category: "typography"
)
)
),
  error: (
  font-style: (
  value: caption-1,
  type: "alias",
  meta: (
  description: "Font style for error text",
  category: "typography"
)
),
  padding: (
  value: 0px 16px 0px 16px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Padding for error message",
  category: "input"
)
)
)
)
)
)
);
$main-container:(
  default: (
  type: "component",
  meta: (
  status: "unused"
),
  self: (
  border-radius: (
  value: 16px,
  type: "radius",
  unit: "px",
  meta: (
  description: "Border radius of the main container",
  category: "radius",
  status: "unused"
)
),
  media: (
  lg: (
  padding: (
  value: 8px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Padding for large screens",
  category: "spacing",
  status: "unused"
)
)
),
  md: (
  padding: (
  value: 8px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Padding for medium screens",
  category: "spacing",
  status: "unused"
)
)
)
)
)
)
);
$options:(
  default: (
  lg: (
  type: "component",
  elements: (
  option: (
  font-style: (
  value: label-2,
  type: "alias",
  meta: (
  description: "Font style for large dropdown option",
  category: "typography"
)
),
  min-height: (
  value: 24px,
  type: "size",
  unit: "px",
  meta: (
  description: "Minimum height of large dropdown option",
  category: "dropDown"
)
)
)
)
),
  md: (
  type: "component",
  elements: (
  option: (
  font-style: (
  value: label-3,
  type: "alias",
  meta: (
  description: "Font style for medium dropdown option",
  category: "typography"
)
),
  min-height: (
  value: 24px,
  type: "size",
  unit: "px",
  meta: (
  description: "Minimum height of medium dropdown option",
  category: "dropDown"
)
)
)
)
)
)
);
$progressbar:(
  default: (
  lg: (
  type: "component",
  self: (
  height: (
  value: 10px,
  type: "size",
  unit: "px",
  meta: (
  category: "progressbar"
)
),
  border-radius: (
  value: 5px,
  type: "radius",
  unit: "px",
  meta: (
  category: "progressbar"
)
)
)
),
  md: (
  type: "component",
  self: (
  height: (
  value: 8px,
  type: "size",
  unit: "px",
  meta: (
  category: "progressbar"
)
),
  border-radius: (
  value: 4px,
  type: "radius",
  unit: "px",
  meta: (
  category: "progressbar"
)
)
)
)
)
);
$resizer:(
  default: (
  type: "component",
  self: (
  active-area-width: (
  value: 20px,
  type: "size",
  unit: "px",
  meta: (
  description: "Width of the interactive area for the resizer",
  category: "spacing",
  usage: "Used internally by Vue3 Resize Bounding component only"
)
)
),
  elements: (
  knob: (
  width: (
  value: 76px,
  type: "size",
  unit: "px",
  meta: (
  description: "Width of the draggable knob",
  category: "size",
  usage: "Specific to vue3-resize-bounding"
)
),
  height: (
  value: 6px,
  type: "size",
  unit: "px",
  meta: (
  description: "Height of the draggable knob",
  category: "size",
  usage: "Specific to vue3-resize-bounding"
)
),
  border-radius: (
  value: 3px,
  type: "radius",
  unit: "px",
  meta: (
  description: "Corner radius of the knob",
  category: "radius",
  usage: "Specific to vue3-resize-bounding"
)
)
)
)
)
);
$scrollbar:(
  default: (
  type: "component",
  elements: (
  thumb: (
  width: (
  value: 3px,
  type: "size",
  unit: "px",
  meta: (
  description: "Width of the scrollbar thumb",
  category: "size",
  usage: "Internal use only"
)
),
  border-radius: (
  value: 1.5px,
  type: "radius",
  unit: "px",
  meta: (
  description: "Corner radius of the scrollbar thumb",
  category: "radius",
  usage: "Internal use only"
)
)
)
)
)
);
$sheet:(
  default: (
  lg: (
  type: "component",
  self: (
  min-height: (
  value: 32px,
  type: "size",
  unit: "px",
  meta: (
  description: "Minimum height of large action sheet",
  category: "sheet"
)
),
  border-radius: (
  value: 16px,
  type: "radius",
  unit: "px",
  meta: (
  description: "Border radius for large action sheet",
  category: "sheet"
)
),
  gap: (
  value: 32px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Gap between elements inside large sheet",
  category: "sheet"
)
),
  padding: (
  value: 48px 24px 24px 24px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Padding inside large sheet",
  category: "sheet"
)
)
),
  elements: (
  button: (
  offset: (
  value: 24px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Offset for buttons inside large sheet",
  category: "sheet"
)
)
)
)
),
  md: (
  type: "component",
  self: (
  min-height: (
  value: 32px,
  type: "size",
  unit: "px",
  meta: (
  description: "Minimum height of large action sheet",
  category: "sheet"
)
),
  border-radius: (
  value: 16px,
  type: "radius",
  unit: "px",
  meta: (
  description: "Border radius for large action sheet",
  category: "sheet"
)
),
  gap: (
  value: 16px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Gap between elements inside medium sheet",
  category: "sheet"
)
),
  padding: (
  value: 24px 24px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Padding inside medium sheet",
  category: "sheet"
)
)
),
  elements: (
  button: (
  offset: (
  value: 24px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Offset for buttons inside medium sheet",
  category: "sheet"
)
)
)
)
)
)
);
$step-pagination-tabs:(
  default: (
  lg: (
  type: "component",
  elements: (
  item: (
  font-style: (
  value: title-3,
  type: "alias",
  meta: (
  description: "Font style for step pagination tab item on large screens",
  category: "typography"
)
),
  padding: (
  value: 8px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Padding for step pagination tab item on large screens",
  category: "spacing"
)
)
)
)
),
  md: (
  type: "component",
  elements: (
  item: (
  font-style: (
  value: title-4,
  type: "alias",
  meta: (
  description: "Font style for step pagination tab item on medium screens",
  category: "typography"
)
),
  padding: (
  value: 8px,
  type: "spacing",
  unit: "px",
  meta: (
  description: "Padding for step pagination tab item on medium screens",
  category: "spacing"
)
)
)
)
)
)
);
$toggle-switch:(
  default: (
  lg: (
  self: (
  width: (
  value: 40px,
  type: "size",
  unit: "px",
  meta: (
  category: "toggle switch"
)
),
  height: (
  value: 20px,
  type: "size",
  unit: "px",
  meta: (
  category: "toggle switch"
)
),
  gap: (
  value: 10px,
  type: "spacing",
  unit: "px",
  meta: (
  category: "toggle switch"
)
)
),
  elements: (
  track: (
  padding: (
  value: 2px,
  type: "spacing",
  unit: "px",
  meta: (
  category: "toggle switch"
)
),
  border-radius: (
  value: 10px,
  type: "radius",
  unit: "px",
  meta: (
  category: "toggle switch"
)
)
),
  label: (
  font-style: (
  value: label-3,
  type: "alias"
)
)
)
),
  md: (
  self: (
  width: (
  value: 36px,
  type: "size",
  unit: "px",
  meta: (
  category: "toggle switch"
)
),
  height: (
  value: 18px,
  type: "size",
  unit: "px",
  meta: (
  category: "toggle switch"
)
),
  gap: (
  value: 10px,
  type: "spacing",
  unit: "px",
  meta: (
  category: "toggle switch"
)
)
),
  elements: (
  track: (
  padding: (
  value: 2px,
  type: "spacing",
  unit: "px",
  meta: (
  category: "toggle switch"
)
),
  border-radius: (
  value: 7px,
  type: "radius",
  unit: "px",
  meta: (
  category: "toggle switch"
)
)
),
  label: (
  font-style: (
  value: label-3,
  type: "alias"
)
)
)
),
  sm: (
  self: (
  width: (
  value: 32px,
  type: "size",
  unit: "px",
  meta: (
  category: "toggle switch"
)
),
  height: (
  value: 16px,
  type: "size",
  unit: "px",
  meta: (
  category: "toggle switch"
)
),
  gap: (
  value: 10px,
  type: "spacing",
  unit: "px",
  meta: (
  category: "toggle switch"
)
)
),
  elements: (
  track: (
  padding: (
  value: 2px,
  type: "spacing",
  unit: "px",
  meta: (
  category: "toggle switch"
)
),
  border-radius: (
  value: 6px,
  type: "radius",
  unit: "px",
  meta: (
  category: "toggle switch"
)
)
),
  label: (
  font-style: (
  value: label-3,
  type: "alias"
)
)
)
)
)
);
